"""initial

Revision ID: 79b50df2294f
Revises: 
Create Date: 2025-02-06 23:48:39.540390

"""
from typing import Sequence, Union
import sqlmodel

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '79b50df2294f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('consenttemplate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('topic', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('explanation', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('consenttemplate', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_consenttemplate_category'), ['category'], unique=False)
        batch_op.create_index(batch_op.f('ix_consenttemplate_topic'), ['topic'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('nickname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_id_name'), ['id_name'], unique=False)

    op.create_table('consentsheet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unique_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('human_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('comment', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('public_share_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('consentsheet', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_consentsheet_unique_name'), ['unique_name'], unique=True)

    op.create_table('consententry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('consent_sheet_id', sa.Integer(), nullable=False),
    sa.Column('consent_template_id', sa.Integer(), nullable=False),
    sa.Column('preference', sa.Enum('yes', 'okay', 'maybe', 'no', 'unknown', name='consentstatus'), nullable=False),
    sa.Column('comment', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['consent_sheet_id'], ['consentsheet.id'], ),
    sa.ForeignKeyConstraint(['consent_template_id'], ['consenttemplate.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rpggroup',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('gm_user_id', sa.Integer(), nullable=False),
    sa.Column('gm_consent_sheet_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gm_consent_sheet_id'], ['consentsheet.id'], ),
    sa.ForeignKeyConstraint(['gm_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groupconsentsheetlink',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('consent_sheet_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['consent_sheet_id'], ['consentsheet.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['rpggroup.id'], ),
    sa.PrimaryKeyConstraint('group_id', 'consent_sheet_id')
    )
    op.create_table('usergrouplink',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['rpggroup.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('usergrouplink')
    op.drop_table('groupconsentsheetlink')
    op.drop_table('rpggroup')
    op.drop_table('consententry')
    with op.batch_alter_table('consentsheet', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_consentsheet_unique_name'))

    op.drop_table('consentsheet')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_id_name'))

    op.drop_table('user')
    with op.batch_alter_table('consenttemplate', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_consenttemplate_topic'))
        batch_op.drop_index(batch_op.f('ix_consenttemplate_category'))

    op.drop_table('consenttemplate')
    # ### end Alembic commands ###
